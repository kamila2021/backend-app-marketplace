schema {
    query: Query
    mutation: Mutation
}

type Query {
    listarUsuarios: [Usuario]
    listarUsuarioPorId(id: Int): Usuario
    usuario(id: Int!): Usuario  # Cambiado getUsuario a usuario
}



type Categoria {
    id: Float
    nombre: String
}

type Mutation {
    addNewUser(usuario: UsuarioInput!): Usuario
    crearUsuario(usuario: UsuarioInput!): Usuario
    forgotPassword(email: String): Boolean
    updatePasswordByCode(code: String, password: String): Boolean
}

type Role {
    id: Int
    name: String
    usuarios:[Usuario]
}
input UsuarioInput {
    firstname: String!
    lastname: String!
    username: String!
    password: String!
    telephone: String!
    accountLocked: Boolean  # Corregido el tipo boolean
    enabled: Boolean  # Corregido el tipo boolean
    roles: [Int]
}

type Usuario {
    id: Int!
    firstname: String!
    lastname: String!
    username: String!
    password: String!
    telephone: String!
    accountLocked: Boolean
    enabled: Boolean
    roles: [Role]
}

type Servicio {
    id: Int
    nombre: String
    costo: Int
    direccion: String
}
